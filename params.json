{"name":"Lambda Behave","tagline":"A modern testing and behavioural specification framework for Java 8","body":"### Introduction\r\nIf you're a Java developer and you've seen the fluent, modern specification frameworks available in other programming languages such as spock or jasmine then Lambda Behave is for you. Its goal is to make testing a more pleasant experience than it currently is with junit.\r\n\r\n### Fluent Specifications\r\n\r\n```\r\npublic class StackSpec {{\r\n\r\n    Stack<Integer> stack = new Stack<>();\r\n\r\n    describe(\"a stack\", it -> {\r\n\r\n        it.shouldSetup(stack::clear);\r\n\r\n        it.shouldTearDown(stack::clear);\r\n\r\n        it.should(\"be empty when created\", expect -> {\r\n            expect.that(stack).isEmpty();\r\n        });\r\n```\r\n\r\n### Data Driven Specifications\r\n\r\nThe ability to parameterise specifications by different data inputs. This data is also usable in the specification name.\r\n\r\n```\r\n    describe(\"a pair of numbers\", it -> {\r\n        it.uses(2, 4)\r\n          .and(4, 8)\r\n          .toShow(\"%d / %d is two\", (expect, x, y) -> {\r\n              expect.that(y / x).is(2);\r\n          });\r\n    });\r\n```\r\n\r\n### Junit Integration\r\n\r\nLambda behave also offers a junit runner. This lets you easily integrate into existing your existing test suite, or the tests via an Eclipse, Intellij, Netbeans, Maven, Gradle or Ant. You can use annotations to drive this:\r\n\r\n```\r\n@RunWith(JunitSuiteRunner.class)\r\npublic class StackSpec {{\r\n```\r\n\r\n### How to contribute\r\n\r\nPatches should be submitted as github pull requests, issues filed via the github.\r\n\r\nHave fun!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}